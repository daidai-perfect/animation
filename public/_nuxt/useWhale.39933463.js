import{l as A,R as W,aa as K}from"./entry.ad32dc49.js";import{o as B,q,X as d}from"./pool.f9585ea2.js";import{h as r,b as j,s as g}from"./sha256.de7acfa8.js";import{D as l}from"./decimal.0bdeb344.js";const N=K(),$=N.public.appEnv;function Y(a){const w={launchpad:r[a||"Sui"].launchpad,ido:r[a||"Sui"].ido,xcetus:r[a||"Sui"].xcetus,xcetus_dividends:r[a||"Sui"].xcetus_dividends,cetus_faucet:r[a||"Sui"].cetus_faucet,xtoken:r[a||"Sui"].xtoken,xtoken_dividends:r[a||"Sui"].xtoken_dividends,token_faucet:r[a||"Sui"].token_faucet,booster:r[a||"Sui"].booster,maker_bonus:r[a||"Sui"].maker_bonus},C={fullRpcUrl:localStorage.getItem(`${a}-currentRpclocal4`)||r[a||"Sui"].fullRpcUrl,simulationAccount:r[a||"Sui"].simulationAccount,cetus_config:r[a||"Sui"].cetus_config,clmm_pool:r[a||"Sui"].clmm_pool,integrate:r[a||"Sui"].integrate,deepbook:r[a||"Sui"].deepbook,deepbook_endpoint_v2:r[a||"Sui"].deepbook_endpoint_v2,aggregatorUrl:r[a||"Sui"].aggregatorUrl},v=new B(C),n=new q(w,v),y=j(),m=A(()=>y);W(()=>{m.value.address&&(n.ClmmSDK.senderAddress=m.value.address)});const f=async e=>{const t=await n.XCetusModule.getOwnerLockCetuss(e);return console.log(t,"===>lockWhales"),t},M=async(e,t)=>{const o=d.getAvailableXCetus(e,t);return console.log(o,"==>availableXwhale"),o},S=async e=>{const t=await n.XCetusModule.getOwnerCetusCoins(e);return console.log(t,"===>coins"),t},x=async e=>await n.XCetusModule.getOwnerVeNFT(e),b=async(e,t)=>{const o={amount:e};t&&(o.venft_id=t);const s=await n.XCetusModule.convertPayload(o),u={action:"xCETUSConvert",txbParams:o};return{txb:c(s),payloadParams:u}},k=async()=>{const e=await n.XCetusModule.mintVeNFTPayload();return c(e)},X=async(e,t)=>{const o=await n.XCetusModule.redeemNum(e,t);return console.log(o,"result===>"),{amountOut:o.amountOut,percent:g(new l(o.percent).mul(new l(100)).toString(),2)}},T=async(e,t)=>{const o=await n.XCetusModule.reverseRedeemNum(e,t);return{amountOut:o.amountOut,percent:g(new l(o.percent).mul(new l(100)).toString(),2)}},_=async(e,t,o)=>{const s={venft_id:t,amount:e,lock_day:o},u=await n.XCetusModule.redeemLockPayload(s),i={action:"xCETUSRedeemLock",txbParams:s};return{txb:c(u),payloadParams:i}},P=e=>d.getLockingCetuss(e),D=async(e,t)=>{const o=await n.XCetusModule.getLockCetus(e);if(o&&d.isLocked(o)){const s={venft_id:t,lock_id:e},u=n.XCetusModule.cancelRedeemPayload(s),i={action:"xCETUSCancelRedeem",txbParams:s};return{txb:c(u),payloadParams:i}}},R=async(e,t)=>{const o=await n.XCetusModule.getLockCetus(e);if(o&&!d.isLocked(o)){const s={venft_id:t,lock_id:e},u=await n.XCetusModule.redeemPayload(s),i={action:"xCETUSRedeem",txbParams:s};return{txb:c(u),payloadParams:i}}},h=async()=>{const e=await n.XCetusModule.getDividendManager();console.log("dividendManager:",e);const t=Number(d.getNextStartTime(e).toString());return console.log(t,"===>nextStartTime"),{nextStartTime:t,...e}},I=async(e,t)=>{const o=await n.XCetusModule.getVeNFTDividendInfo(t.venft_dividends.id,e);return{rewards:o&&o.rewards||[]}},O=async e=>{const t=await n.XCetusModule.getDividendManager();if(console.log("dividendManager: ",t),t.bonus_types.length>0){const o=await n.XCetusModule.redeemDividendPayload(e,t.bonus_types);return c(o)}},F=e=>{const t=new Set;return e.forEach(o=>{o.rewards.forEach(s=>{s.amount>0&&t.add(s.coin_type)})}),Array.from(t)},L=async e=>{const t=await n.XCetusModule.getDividendManager(),o=await n.XCetusModule.getVeNFTDividendInfo(t.venft_dividends.id,e);console.log("veNFTDividendInfo: ",o);const s=F(o.rewards);console.log(s,"===>bonus_types");const u={venft_id:e,bonus_types:s,xTokenType:[n.XCetusModule.buileXTokenCoinType()]},i=await n.XCetusModule.redeemDividendV2Payload(u.venft_id,u.bonus_types,u.xTokenType),V={action:"xCETUSClaimStakingRwewards",txbParams:u};return{txb:c(i),payloadParams:V}},E=async e=>{console.log(e,"==>accountAddress");try{const t=await n.XCetusModule.getOwnerVeNFT(e);if(console.log("nfts: ",t),t){const o=await n.XCetusModule.getXcetusManager();console.log("xcetusManager: ",o);const s=new l(t.xcetus_balance).div(o.treasury).mul(100).toString();return console.log("rate: ",s),Number(s)>0&&Number(s)<.001?"<0.001":g(s,3)}else return 0}catch{return"--"}},U=async()=>{const e=await n.XCetusModule.getXcetusManager();return console.log("xcetusManager: ",e),e},c=e=>({transactionBlock:e,options:{showEffects:!0,showEvents:!0,showInput:!0,showRawInput:!0,showObjectChanges:!0,showBalanceChanges:!0}}),p=e=>{const t=Date.now()/1e3,{start_time:o,interval_day:s}=e;console.log(e,"#dividendManager");const u=$=="test"?Math.ceil((t-o)/(s*60)):Math.ceil((t-o)/(s*24*3600));return console.log(t,"===>currentTime"),console.log(o,"===>start_time"),console.log(t-o,"===>currentTime-start_time"),console.log((t-o)/(s*60),"(currentTime - start_time) / (interval_day * 60)"),u};return{getOwnerLockCetuss:f,getOwnerCetusCoins:S,getOwnerVeNFT:x,depositCetus:b,getMintVeNFTPayload:k,redeemNum:X,getRedeemLockPayload:_,getAvailableXCetus:M,getLockingCetuss:P,getCancelRedeemPayload:D,getVeNFTDividendInfo:I,reverseRedeemNum:T,getRedeemPayload:R,getRedeemDividendPayload:O,getMyShare:E,getDividendManager:h,getPeriod:p,getRedeemDividendV2Payload:L,getPhaseDividendInfo:async e=>{const t=p(e);console.log(t,"getPhaseDividendInfo period");const o=await n.XCetusModule.getPhaseDividendInfo(String(t));return console.log(o,"==>phaseDividendInfo"),o},getXcetusManager:U}}export{Y as u};
